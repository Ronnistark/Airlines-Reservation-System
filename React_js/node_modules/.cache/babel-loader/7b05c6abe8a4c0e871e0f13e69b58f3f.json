{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Final_Project\\\\flight\\\\src\\\\Registration.js\";\nimport React, { Component } from 'react';\nimport { FormErrors } from './FormErrors';\nimport './Registration.css';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      First_Name: '',\n      formErrors: {\n        email: '',\n        password: '',\n        First_Name: ''\n      },\n      emailValid: false,\n      passwordValid: false,\n      First_Name: false,\n      formValid: false\n    };\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n    let First_NameValid = this.state.First_NameValid;\n\n    switch (fieldName) {\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n        break;\n\n      case 'password':\n        passwordValid = value.length >= 6;\n        fieldValidationErrors.password = passwordValid ? '' : ' is too short';\n        break;\n\n      case 'First_Name':\n        First_NameValid = value.length >= 4;\n        fieldValidationErrors.First_Name = First_NameValid ? '' : ' is too short';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      emailValid: emailValid,\n      passwordValid: passwordValid,\n      First_NameValid: First_NameValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.emailValid && this.state.passwordValid && this.state.First_NameValid\n    });\n  }\n\n  errorClass(error) {\n    return error.length === 0 ? '' : 'has-error';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"demoForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel panel-default\",\n        children: /*#__PURE__*/_jsxDEV(FormErrors, {\n          formErrors: this.state.formErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `form-group ${this.errorClass(this.state.formErrors.email)}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          required: true,\n          className: \"form-control\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: this.state.email,\n          onChange: this.handleUserInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `form-group ${this.errorClass(this.state.formErrors.password)}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: this.state.password,\n          onChange: this.handleUserInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: !this.state.formValid,\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Registration;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Final_Project/flight/src/Registration.js"],"names":["React","Component","FormErrors","Registration","constructor","props","handleUserInput","e","name","target","value","setState","validateField","state","email","password","First_Name","formErrors","emailValid","passwordValid","formValid","fieldName","fieldValidationErrors","First_NameValid","match","length","validateForm","errorClass","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormErrors } from './FormErrors';\r\nimport './Registration.css';\r\n\r\nclass Registration extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      First_Name:'',\r\n      formErrors: {email: '', password: '',First_Name:''},\r\n      emailValid: false,\r\n      passwordValid: false,\r\n      First_Name:false,\r\n      formValid: false\r\n    }\r\n  }\r\n\r\n  handleUserInput = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({[name]: value},\r\n                  () => { this.validateField(name, value) });\r\n  }\r\n\r\n  validateField(fieldName, value) {\r\n    let fieldValidationErrors = this.state.formErrors;\r\n    let emailValid = this.state.emailValid;\r\n    let passwordValid = this.state.passwordValid;\r\n    let First_NameValid=this.state.First_NameValid;\r\n\r\n    switch(fieldName) {\r\n      case 'email':\r\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\r\n        break;\r\n      case 'password':\r\n        passwordValid = value.length >= 6;\r\n        fieldValidationErrors.password = passwordValid ? '': ' is too short';\r\n        break;\r\n        case 'First_Name':\r\n          First_NameValid = value.length >= 4;\r\n          fieldValidationErrors.First_Name = First_NameValid ? '': ' is too short';\r\n          break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({formErrors: fieldValidationErrors,\r\n                    emailValid: emailValid,\r\n                    passwordValid: passwordValid,\r\n                    First_NameValid:First_NameValid,\r\n                  }, this.validateForm);\r\n  }\r\n\r\n  validateForm() {\r\n    this.setState({formValid: this.state.emailValid && this.state.passwordValid&&this.state.First_NameValid});\r\n  }\r\n\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <form className=\"demoForm\">\r\n        <h2>Sign up</h2>\r\n        <div className=\"panel panel-default\">\r\n          <FormErrors formErrors={this.state.formErrors} />\r\n        </div>\r\n        <div className={`form-group ${this.errorClass(this.state.formErrors.email)}`}>\r\n          <label htmlFor=\"email\">Email address</label>\r\n          <input type=\"email\" required className=\"form-control\" name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={this.state.email}\r\n            onChange={this.handleUserInput}  />\r\n        </div>\r\n        <div className={`form-group ${this.errorClass(this.state.formErrors.password)}`}>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" className=\"form-control\" name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={this.state.password}\r\n            onChange={this.handleUserInput}  />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={!this.state.formValid}>Sign up</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Registration;"]},"metadata":{},"sourceType":"module"}